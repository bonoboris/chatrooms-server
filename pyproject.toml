[build-system]
requires = ["pdm-backend"]
build-backend = "pdm.backend"

[project]
name = "chatrooms"
description = "Chatrooms web app FastAPI server"
authors = [{ name = "bonoboris", email = "bonoboris@mailo.com" }]
dynamic = ["version"]
readme = "README.md"
license = { text = "GPL-3.0-or-later" }
requires-python = ">=3.12"
classifiers = ["Framework :: FastAPI", "Programming Language :: Python :: 3"]
dependencies = [
    "fastapi[all]>=0.100.1",
    "passlib[bcrypt]>=1.7.4",
    "psycopg[binary]>=3.1.9",
    "python-jose[cryptography]>=3.3.0",
    "typer[all]>=0.9.0",
    "colorama>=0.4.6",
]

[project.scripts]
migrate = "chatrooms.database.migrations.cli:cli"
manage = "chatrooms.database.manage:cli"


[tool.pytest.ini_options]
# pytest
minversion = "6.0"
addopts = "-ra" # report only failed tests
testpaths = ["tests"]
filterwarnings = [
    "error",
    'ignore: datetime.datetime.utcnow\(\) is deprecated:DeprecationWarning:jose',
    "ignore:'crypt' is deprecated:DeprecationWarning:passlib",
]
# pytest-asyncio
asyncio_mode = "auto"
asyncio_default_fixture_loop_scope = "session"

[tool.coverage.run]
branch = true
include = ["src/**"]

[tool.pyright]
typeCheckingMode = "strict"

[tool.ruff]
line-length = 100
target-version = "py311"
include = ["src/**/*.py", "tests/**/*.py", "scripts/**/*.py"]

[tool.ruff.format]
line-ending = "lf"

[tool.ruff.lint]
select = ["ALL"]
ignore = [
    "COM812", # Trailling comma missing  <--  conficts with formatter
    "ISC001", # Implicitly concatenated string literals on one line  <--  conficts with formatter
    "D107",   # Missing docstring in `__init__`  <--  using class docstring only
    "G004",   # Logging statement uses f-string  <--  it's ok
    "TCH001", # Move application import into a type-checking block  <--  FastAPI use annotations at runtime
    "TCH002", # Move third-party import into a type-checking block  <--  FastAPI use annotations at runtime
    "TCH003", # Move standard library import into a type-checking block  <--  it's ok
    "TD002",  # Missing author in TODO  <--  it's me
    "TD003",  # Missing issue link in TODO  <-- no need
]

isort.known-first-party = ["chatrooms"]
pylint.max-args = 8
pydocstyle.convention = "google"
flake8-builtins.builtins-ignorelist = ["id"] # allow overwriting "id" built-in
flake8-type-checking.runtime-evaluated-base-classes = [
    "pydantic.BaseModel",
    "pydantic_settings.BaseSettings",
]

[tool.ruff.lint.per-file-ignores]
"tests/**/test_*.py" = [
    "D",      # Docstring
    "ANN201", # Missing return type annotation for public function
    "ANN202", # Missing return type annotation for private function
    "S101",   # Use of assert detected
]

[tool.pdm.version]
source = "file"
path = "src/chatrooms/__version__.py"

[tool.pdm.dev-dependencies]
dev = [
    "coverage>=7.2.7",
    "pyright>=1.1.318",
    "pytest>=7.4.0",
    "pytest-asyncio>=0.24.0",
    "devtools>=0.11.0",
    "mypy>=1.11.2",
]

[tool.pdm.scripts]
dev.shell = "uvicorn 'chatrooms.main:app' --reload --reload-dir src --log-config src/chatrooms/logging.json"
test = "pytest"

lint = "ruff check ."
format = "ruff format ."

type-check = "pyright ."

cov-erase = "coverage erase"
cov-run = "coverage run -m pytest"
cov-report = "coverage html"
cov = { composite = ["cov-erase", "cov-run", "cov-report"] }
